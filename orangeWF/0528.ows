<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="plain" position="(-2128.0, 75.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(-1945.0, 78.0)" />
		<node id="2" name="Correlations" qualified_name="Orange.widgets.data.owcorrelations.OWCorrelations" project_name="Orange3" version="" title="Correlations" position="(-1744.0, 69.0)" />
		<node id="3" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="bookRatio" position="(-2128.0, 244.0)" />
		<node id="4" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (2)" position="(-1973.0, 254.0)" />
		<node id="5" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot" position="(-1757.0, 256.0)" />
		<node id="6" name="Correlations" qualified_name="Orange.widgets.data.owcorrelations.OWCorrelations" project_name="Orange3" version="" title="Correlations (1)" position="(-1766.0, 346.0)" />
		<node id="7" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot (1)" position="(-1746.0, 169.0)" />
		<node id="8" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="studentsRatio" position="(-1546.0, 39.0)" />
		<node id="9" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (3)" position="(-1396.0, 40.0)" />
		<node id="10" name="Correlations" qualified_name="Orange.widgets.data.owcorrelations.OWCorrelations" project_name="Orange3" version="" title="Correlations (2)" position="(-1225.0, 42.0)" />
		<node id="11" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="정보, 소프트웨어, 컴퓨터, 인터넷" position="(-1545.0, 146.0)" />
		<node id="12" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (1)" position="(-1409.0, 142.0)" />
		<node id="13" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot" position="(-1222.0, 142.0)" />
		<node id="14" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="상업" position="(-1553.0, 240.0)" />
		<node id="15" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (4)" position="(-1412.0, 242.0)" />
		<node id="16" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (1)" position="(-1225.0, 237.0)" />
		<node id="17" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="기계" position="(-1558.0, 346.0)" />
		<node id="18" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (5)" position="(-1407.0, 348.0)" />
		<node id="19" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (2)" position="(-1223.0, 346.0)" />
		<node id="20" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="공업" position="(-1566.0, 462.0)" />
		<node id="21" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (6)" position="(-1429.0, 465.0)" />
		<node id="22" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (3)" position="(-1226.0, 456.0)" />
		<node id="23" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="세무" position="(-1561.0, 667.0)" />
		<node id="24" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (7)" position="(-1423.0, 668.0)" />
		<node id="25" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (4)" position="(-1239.0, 666.0)" />
		<node id="26" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="perhaps love" position="(-2130.0, 479.0)" />
		<node id="27" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (8)" position="(-2025.0, 480.0)" />
		<node id="28" name="Correlations" qualified_name="Orange.widgets.data.owcorrelations.OWCorrelations" project_name="Orange3" version="" title="Correlations (3)" position="(-1777.0, 469.0)" />
		<node id="29" name="Scatter Plot" qualified_name="Orange.widgets.visualize.owscatterplot.OWScatterPlot" project_name="Orange3" version="" title="Scatter Plot (2)" position="(-1789.0, 566.0)" />
		<node id="30" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="항공" position="(-1567.0, 575.0)" />
		<node id="31" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (7) (1)" position="(-1427.0, 577.0)" />
		<node id="32" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (4) (1)" position="(-1236.0, 570.0)" />
		<node id="33" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="where enrollR &gt; 0.5" position="(-1550.0, 759.4444444444445)" />
		<node id="34" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table (9)" position="(-1400.0, 759.4444444444445)" />
		<node id="35" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (5)" position="(-1234.0, 759.4444444444445)" />
		<node id="36" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="where employmentR &gt; 0.5 " position="(-1554.0, 859.4444444444445)" />
		<node id="37" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="DT" position="(-1394.0, 866.4444444444445)" />
		<node id="38" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (5) (1)" position="(-1221.0, 865.4444444444445)" />
		<node id="39" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="DT (1)" position="(-1394.0, 986.4444444444445)" />
		<node id="40" name="Box Plot" qualified_name="Orange.widgets.visualize.owboxplot.OWBoxPlot" project_name="Orange3" version="" title="Box Plot (5) (1) (1)" position="(-1221.0, 985.4444444444445)" />
		<node id="41" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="where babyOneMoreTimeR &gt; 0.5 " position="(-1554.0, 979.4444444444445)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="1" sink_node_id="2" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="2" source_node_id="3" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="3" source_node_id="4" sink_node_id="5" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="4" source_node_id="4" sink_node_id="6" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="5" source_node_id="1" sink_node_id="7" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="6" source_node_id="8" sink_node_id="9" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="7" source_node_id="9" sink_node_id="10" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="8" source_node_id="11" sink_node_id="12" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="9" source_node_id="12" sink_node_id="13" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="10" source_node_id="14" sink_node_id="15" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="11" source_node_id="15" sink_node_id="16" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="12" source_node_id="17" sink_node_id="18" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="13" source_node_id="18" sink_node_id="19" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="14" source_node_id="20" sink_node_id="21" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="15" source_node_id="21" sink_node_id="22" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="16" source_node_id="23" sink_node_id="24" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="17" source_node_id="24" sink_node_id="25" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="18" source_node_id="26" sink_node_id="27" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="19" source_node_id="27" sink_node_id="28" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="20" source_node_id="27" sink_node_id="29" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="21" source_node_id="30" sink_node_id="31" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="22" source_node_id="31" sink_node_id="32" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="23" source_node_id="33" sink_node_id="34" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="24" source_node_id="34" sink_node_id="35" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="25" source_node_id="36" sink_node_id="37" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="26" source_node_id="37" sink_node_id="38" source_channel="Selected Data" sink_channel="Data" enabled="true" />
		<link id="27" source_node_id="41" sink_node_id="39" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="28" source_node_id="39" sink_node_id="40" source_channel="Selected Data" sink_channel="Data" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x01\x00\x00\x00\x1f\x00\x00\x03\xbe\x00\x00\x04\x0e\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\nlist_forTmp = []  # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 18):\n            continue\n        else:\n            if (i == 22) : \n                employmentRate_tmp = school[i]\n            if (i == 23) : \n                enrollmentRate_tmp = school[i]\n            list_forTmp.append(school[i])\n    list_forTmp.append((1 - enrollmentRate_tmp) * (1 - employmentRate_tmp))\n    list_forLongLive.append(list_forTmp)\n    list_forTmp = []\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\ngeneralClassNumber = ContinuousVariable("generalClassNumber")\nspecialClassNumber = ContinuousVariable("specialClassNumber")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 generalClassNumber, \n                 specialClassNumber, \n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00]\x00\x00\x00]\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'auto_commit': False, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="2" format="pickle">gASV7QgAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBjb3JyZWxhdGlvbl90eXBllEsA
jBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAM5AAAAUAAABkUAAANXAAADOQAAAFAA
AAZFAAADVwAAAAAAAAAAB4AAAAM5AAAAUAAABkUAAANXlIwLX192ZXJzaW9uX1+USwOMEGNvbnRl
eHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQo
jAZ2YWx1ZXOUfZQojAdmZWF0dXJllIwOZW5yb2xsbWVudFJhdGWUS2aGlIwJc2VsZWN0aW9ulF2U
KIwOZW1wbG95bWVudFJhdGWUS2aGlGgQS2aGlGVK/f///4aUaAVLA3WMCmF0dHJpYnV0ZXOUfZQo
jAVpbmRleJRLAowSc2Nob29sTmFtZV9rZXlXb3JklEsCjA9zdHVkZW50c19udW1iZXKUSwKMFnN0
dWRlbnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVPdXRfbnVtYmVylEsCjBZzdHVk
ZW50c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9udW1iZXKUSwKMHGdlbmVyYWxU
ZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hlcl9udW1iZXKUSwKMHXBvc2l0
aW9uVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpllEsCjBJudW1iZXJPZkRlcGFy
dG1lbnSUSwKMEmdlbmVyYWxDbGFzc051bWJlcpRLAowSc3BlY2lhbENsYXNzTnVtYmVylEsCjBVy
ZWdpb25hbEF2ZXJhZ2VJbmNvbWWUSwKMEnJlZ2lvbmFsUHJpY2VQZXJQeZRLAowVcmVnaW9uYWxQ
cmljZU1vbWVudHVtlEsCjApib29rX3RvdGFslEsCjA9ib29rX3llYXJseVVzZXKUSwKMD2Jvb2tf
eWVhcmx5Qm9va5RLAowOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRSYXRllEsCjA9iYWJ5
T25lTW9yZVRpbWWUSwJ1jAVtZXRhc5R9lHViaAopgZR9lChoDX2UKIwHZmVhdHVyZZRoL0tmhpSM
CXNlbGVjdGlvbpRdlChoL0tmhpRoI0tmhpRlSv3///+GlGgFSwN1aBh9lChoGksCaBtLAmgcSwJo
HUsCaB5LAmgfSwJoIEsCaCFLAmgiSwJoI0sCaCRLAmglSwJoJksCaCdLAmgoSwJoKUsCaCtLAmgs
SwJoLUsCaC5LAmgvSwJoMEsCdWgxfZR1YmgKKYGUfZQoaA19lChoNmgvS2aGlGg4XZQoaC9LZoaU
aCNLZoaUZUr9////hpRoBUsDdWgYfZQoaBpLAmgbSwJoHEsCaB1LAmgeSwJoH0sCaCBLAmghSwJo
IksCaCNLAmgkSwJoJUsCaChLAmgpSwJoKksCaCtLAmgtSwJoLksCaC9LAnVoMX2UdWJoCimBlH2U
KGgNfZQojAdmZWF0dXJllIwOZW5yb2xsbWVudFJhdGWUS2aGlIwJc2VsZWN0aW9ulF2UKGhNS2aG
lIwdcG9zaXRpb25UZWFjaGVyX2ZlbWFsZV9udW1iZXKUS2aGlGVK/f///4aUaAVLA3VoGH2UKIwF
aW5kZXiUSwKMEnNjaG9vbE5hbWVfa2V5V29yZJRLAowPc3R1ZGVudHNfbnVtYmVylEsCjBZzdHVk
ZW50c19mZW1hbGVfbnVtYmVylEsCjBdzdHVkZW50c19tb3ZlT3V0X251bWJlcpRLAowWc3R1ZGVu
dHNfbW92ZUluX251bWJlcpRLAowVZ2VuZXJhbFRlYWNoZXJfbnVtYmVylEsCjBxnZW5lcmFsVGVh
Y2hlcl9mZW1hbGVfbnVtYmVylEsCjBZwb3NpdGlvblRlYWNoZXJfbnVtYmVylEsCjB1wb3NpdGlv
blRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowKc2Nob29sU2l6ZZRLAowSbnVtYmVyT2ZEZXBhcnRt
ZW50lEsCjBVyZWdpb25hbEF2ZXJhZ2VJbmNvbWWUSwKMEnJlZ2lvbmFsUHJpY2VQZXJQeZRLAowV
cmVnaW9uYWxQcmljZU1vbWVudHVtlEsCjApib29rX3RvdGFslEsCjA9ib29rX3llYXJseVVzZXKU
SwKMD2Jvb2tfeWVhcmx5Qm9va5RLAowOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRSYXRl
lEsCdWgxfZR1YmgKKYGUfZQoaA19lCiMB2ZlYXR1cmWUjA5lbnJvbGxtZW50UmF0ZZRLZoaUjAlz
ZWxlY3Rpb26UXZQojA5lbXBsb3ltZW50UmF0ZZRLZoaUaG9LZoaUZUr9////hpRoBUsDdWgYfZQo
jAVpbmRleJRLAowSc2Nob29sTmFtZV9rZXlXb3JklEsCjA9zdHVkZW50c19udW1iZXKUSwKMFnN0
dWRlbnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVPdXRfbnVtYmVylEsCjBZzdHVk
ZW50c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9udW1iZXKUSwKMHGdlbmVyYWxU
ZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hlcl9udW1iZXKUSwKMHXBvc2l0
aW9uVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpllEsCjBJudW1iZXJPZkRlcGFy
dG1lbnSUSwKMEnJlZ2lvbmFsUHJpY2VQZXJQeZRLAowVcmVnaW9uYWxQcmljZU1vbWVudHVtlEsC
jApib29rX3RvdGFslEsCjA9ib29rX3llYXJseVVzZXKUSwKMD2Jvb2tfeWVhcmx5Qm9va5RLAmhz
SwJob0sCdWgxfZR1YmV1Lg==
</properties>
		<properties node_id="3" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    studentsNumber = 0\n    bookTotal = 0\n    book_yearlyUsers = 0\n    book_yearlyBooks = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 16):\n            continue\n        else:\n            list_forTmp.append(school[i])\n            if (i == 3) :\n                studentsNumber = school[i]\n            if (i == 17) : \n                bookTotal = school[i]\n            if (i == 18) : \n                book_yearlyBooks = school[i]\n            if (i == 19) :\n                book_yearlyUsers = school[i]\n\n    list_forTmp.append(bookTotal / studentsNumber)\n    list_forTmp.append(book_yearlyUsers / studentsNumber)\n    list_forTmp.append(book_yearlyBooks / studentsNumber)\n    list_forLongLive.append(list_forTmp)\n    list_forTmp = []\n\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\n\n#\nbookTotal_studentRatio = ContinuousVariable("bookTotal_studentRatio")\nbook_yearlyUser_studentRatio = ContinuousVariable("book_yearlyUser_studentRatio")\nbook_yearlyBook_studentRatio = ContinuousVariable("book_yearlyBook_studentRatio")\n#\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 bookTotal_studentRatio, \n                 book_yearlyUser_studentRatio, \n                 book_yearlyBook_studentRatio\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00]\x00\x00\x00]\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="4" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x02\xde\x00\x00\x00\xa0\x00\x00\x05\xfd\x00\x00\x02\x93\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="5" format="pickle">gASVkAQAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMC2F1dG9fc2FtcGxllIiMEmNvbnRyb2xBcmVh
VmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAH9AAAAiAAABmoAAANr
AAAB/gAAAKcAAAZpAAADagAAAAAAAAAAB4AAAAH+AAAApwAABmkAAANqlIwJc2VsZWN0aW9ulE6M
EXRvb2x0aXBfc2hvd3NfYWxslIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwFZ3JhcGiUfZQojAthbHBo
YV92YWx1ZZRLgIwNY2xhc3NfZGVuc2l0eZSJjAtqaXR0ZXJfc2l6ZZRLAIwTbGFiZWxfb25seV9z
ZWxlY3RlZJSJjBZvcnRob25vcm1hbF9yZWdyZXNzaW9ulImMC3BvaW50X3dpZHRolEsKjAlzaG93
X2dyaWSUiYwLc2hvd19sZWdlbmSUiIwNc2hvd19yZWdfbGluZZSJdYwLX192ZXJzaW9uX1+USwSM
EGNvbnRleHRfc2V0dGluZ3OUXZSMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5Qp
gZR9lCiMBnZhbHVlc5R9lCiMCmF0dHJfY29sb3KUjBJzY2hvb2xOYW1lX2tleVdvcmSUS2aGlIwK
YXR0cl9sYWJlbJROSv7///+GlIwKYXR0cl9zaGFwZZROSv7///+GlIwJYXR0cl9zaXpllE5K/v//
/4aUjAZhdHRyX3iUaCBLZoaUjAZhdHRyX3mUjA5lbnJvbGxtZW50UmF0ZZRLZoaUaAp9lGgVSwR1
jAphdHRyaWJ1dGVzlH2UKIwFaW5kZXiUSwJoIEsCjA9zdHVkZW50c19udW1iZXKUSwKMFnN0dWRl
bnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVPdXRfbnVtYmVylEsCjBZzdHVkZW50
c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9udW1iZXKUSwKMHGdlbmVyYWxUZWFj
aGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hlcl9udW1iZXKUSwKMHXBvc2l0aW9u
VGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpllEsCjBJudW1iZXJPZkRlcGFydG1l
bnSUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowScmVnaW9uYWxQcmljZVBlclB5lEsCjBVy
ZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRL
AowPYm9va195ZWFybHlCb29rlEsCjA5lbXBsb3ltZW50UmF0ZZRLAmgrSwKMFmJvb2tUb3RhbF9z
dHVkZW50UmF0aW+USwKMHGJvb2tfeWVhcmx5VXNlcl9zdHVkZW50UmF0aW+USwKMHGJvb2tfeWVh
cmx5Qm9va19zdHVkZW50UmF0aW+USwJ1jAVtZXRhc5R9lHViYXUu
</properties>
		<properties node_id="6" format="pickle">gASVzAcAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBjb3JyZWxhdGlvbl90eXBllEsA
jBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAI2AAAAggAABUIAAAOJAAACNgAAAIIA
AAVCAAADiQAAAAAAAAAAB4AAAAI2AAAAggAABUIAAAOJlIwLX192ZXJzaW9uX1+USwOMEGNvbnRl
eHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQo
jAZ2YWx1ZXOUfZQojAdmZWF0dXJllIwOZW5yb2xsbWVudFJhdGWUS2aGlIwJc2VsZWN0aW9ulF2U
KIwOZW1wbG95bWVudFJhdGWUS2aGlGgQS2aGlGVK/f///4aUaAVLA3WMCmF0dHJpYnV0ZXOUfZQo
jAVpbmRleJRLAowSc2Nob29sTmFtZV9rZXlXb3JklEsCjA9zdHVkZW50c19udW1iZXKUSwKMFnN0
dWRlbnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVPdXRfbnVtYmVylEsCjBZzdHVk
ZW50c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9udW1iZXKUSwKMHGdlbmVyYWxU
ZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hlcl9udW1iZXKUSwKMHXBvc2l0
aW9uVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpllEsCjBJudW1iZXJPZkRlcGFy
dG1lbnSUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowScmVnaW9uYWxQcmljZVBlclB5lEsC
jBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90YWyUSwKMD2Jvb2tfeWVhcmx5VXNl
cpRLAowPYm9va195ZWFybHlCb29rlEsCaBRLAmgQSwKMFmJvb2tUb3RhbF9zdHVkZW50UmF0aW+U
SwKMHGJvb2tfeWVhcmx5VXNlcl9zdHVkZW50UmF0aW+USwKMHGJvb2tfeWVhcmx5Qm9va19zdHVk
ZW50UmF0aW+USwJ1jAVtZXRhc5R9lHViaAopgZR9lChoDX2UKIwHZmVhdHVyZZSMDmVucm9sbG1l
bnRSYXRllEtmhpSMCXNlbGVjdGlvbpRdlCiMDmVtcGxveW1lbnRSYXRllEtmhpRoNUtmhpRlSv3/
//+GlGgFSwN1aBh9lCiMBWluZGV4lEsCjBJzY2hvb2xOYW1lX2tleVdvcmSUSwKMD3N0dWRlbnRz
X251bWJlcpRLAowWc3R1ZGVudHNfZmVtYWxlX251bWJlcpRLAowXc3R1ZGVudHNfbW92ZU91dF9u
dW1iZXKUSwKMFnN0dWRlbnRzX21vdmVJbl9udW1iZXKUSwKMFWdlbmVyYWxUZWFjaGVyX251bWJl
cpRLAowcZ2VuZXJhbFRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowWcG9zaXRpb25UZWFjaGVyX251
bWJlcpRLAowdcG9zaXRpb25UZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMCnNjaG9vbFNpemWUSwKM
Em51bWJlck9mRGVwYXJ0bWVudJRLAowScmVnaW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFBy
aWNlTW9tZW50dW2USwKMCmJvb2tfdG90YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195
ZWFybHlCb29rlEsCaDlLAmg1SwKMFmJvb2tUb3RhbF9zdHVkZW50UmF0aW+USwKMHGJvb2tfeWVh
cmx5VXNlcl9zdHVkZW50UmF0aW+USwKMHGJvb2tfeWVhcmx5Qm9va19zdHVkZW50UmF0aW+USwJ1
aC99lHViaAopgZR9lChoDX2UKIwHZmVhdHVyZZSMDmVucm9sbG1lbnRSYXRllEtmhpSMCXNlbGVj
dGlvbpRdlCiMDmVtcGxveW1lbnRSYXRllEtmhpRoV0tmhpRlSv3///+GlGgFSwN1aBh9lCiMBWlu
ZGV4lEsCjBJzY2hvb2xOYW1lX2tleVdvcmSUSwKMD3N0dWRlbnRzX251bWJlcpRLAowWc3R1ZGVu
dHNfZmVtYWxlX251bWJlcpRLAowXc3R1ZGVudHNfbW92ZU91dF9udW1iZXKUSwKMFnN0dWRlbnRz
X21vdmVJbl9udW1iZXKUSwKMFWdlbmVyYWxUZWFjaGVyX251bWJlcpRLAowcZ2VuZXJhbFRlYWNo
ZXJfZmVtYWxlX251bWJlcpRLAowWcG9zaXRpb25UZWFjaGVyX251bWJlcpRLAowdcG9zaXRpb25U
ZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMCnNjaG9vbFNpemWUSwKMEm51bWJlck9mRGVwYXJ0bWVu
dJRLAowScmVnaW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJv
b2tfdG90YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlCb29rlEsCaFtLAmhX
SwJ1aC99lHViZXUu
</properties>
		<properties node_id="7" format="pickle">gASVvgkAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMC2F1dG9fc2FtcGxllIiMEmNvbnRyb2xBcmVh
VmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAGeAAAAnwAABgsAAAOC
AAABnwAAAL4AAAYKAAADgQAAAAAAAAAAB4AAAAGfAAAAvgAABgoAAAOBlIwJc2VsZWN0aW9ulE6M
EXRvb2x0aXBfc2hvd3NfYWxslIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwFZ3JhcGiUfZQojAthbHBo
YV92YWx1ZZRLgIwNY2xhc3NfZGVuc2l0eZSJjAtqaXR0ZXJfc2l6ZZRLAIwTbGFiZWxfb25seV9z
ZWxlY3RlZJSJjBZvcnRob25vcm1hbF9yZWdyZXNzaW9ulImMC3BvaW50X3dpZHRolEsKjAlzaG93
X2dyaWSUiYwLc2hvd19sZWdlbmSUiIwNc2hvd19yZWdfbGluZZSJdYwLX192ZXJzaW9uX1+USwSM
EGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOU
KYGUfZQojAZ2YWx1ZXOUfZQojAphdHRyX2NvbG9ylE5K/v///4aUjAphdHRyX2xhYmVslE5K/v//
/4aUjAphdHRyX3NoYXBllE5K/v///4aUjAlhdHRyX3NpemWUTkr+////hpSMBmF0dHJfeJSMD2Jh
YnlPbmVNb3JlVGltZZRLZoaUjAZhdHRyX3mUjA5lbnJvbGxtZW50UmF0ZZRLZoaUaAp9lGgVSwR1
jAphdHRyaWJ1dGVzlH2UKIwFaW5kZXiUSwKMEnNjaG9vbE5hbWVfa2V5V29yZJRLAowPc3R1ZGVu
dHNfbnVtYmVylEsCjBZzdHVkZW50c19mZW1hbGVfbnVtYmVylEsCjBdzdHVkZW50c19tb3ZlT3V0
X251bWJlcpRLAowWc3R1ZGVudHNfbW92ZUluX251bWJlcpRLAowVZ2VuZXJhbFRlYWNoZXJfbnVt
YmVylEsCjBxnZW5lcmFsVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjBZwb3NpdGlvblRlYWNoZXJf
bnVtYmVylEsCjB1wb3NpdGlvblRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowKc2Nob29sU2l6ZZRL
AowSbnVtYmVyT2ZEZXBhcnRtZW50lEsCjBJnZW5lcmFsQ2xhc3NOdW1iZXKUSwKMEnNwZWNpYWxD
bGFzc051bWJlcpRLAowVcmVnaW9uYWxBdmVyYWdlSW5jb21llEsCjBJyZWdpb25hbFByaWNlUGVy
UHmUSwKMFXJlZ2lvbmFsUHJpY2VNb21lbnR1bZRLAowKYm9va190b3RhbJRLAowPYm9va195ZWFy
bHlVc2VylEsCjA9ib29rX3llYXJseUJvb2uUSwKMDmVtcGxveW1lbnRSYXRllEsCjA5lbnJvbGxt
ZW50UmF0ZZRLAowPYmFieU9uZU1vcmVUaW1llEsCdYwFbWV0YXOUfZR1YmgaKYGUfZQoaB19lCiM
CmF0dHJfY29sb3KUTkr+////hpSMCmF0dHJfbGFiZWyUTkr+////hpSMCmF0dHJfc2hhcGWUTkr+
////hpSMCWF0dHJfc2l6ZZROSv7///+GlIwGYXR0cl94lGhFS2aGlIwGYXR0cl95lGg+S2aGlIwF
Z3JhcGiUfZRoFUsEdWgufZQojAVpbmRleJRLAowSc2Nob29sTmFtZV9rZXlXb3JklEsCjA9zdHVk
ZW50c19udW1iZXKUSwKMFnN0dWRlbnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVP
dXRfbnVtYmVylEsCjBZzdHVkZW50c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9u
dW1iZXKUSwKMHGdlbmVyYWxUZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hl
cl9udW1iZXKUSwKMHXBvc2l0aW9uVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpl
lEsCjBJudW1iZXJPZkRlcGFydG1lbnSUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowScmVn
aW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90YWyU
SwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlCb29rlEsCjA5lbXBsb3ltZW50UmF0
ZZRLAowOZW5yb2xsbWVudFJhdGWUSwJ1aEd9lHViaBopgZR9lChoHX2UKIwKYXR0cl9jb2xvcpSM
EnNjaG9vbE5hbWVfa2V5V29yZJRLZoaUjAphdHRyX2xhYmVslE5K/v///4aUjAphdHRyX3NoYXBl
lE5K/v///4aUjAlhdHRyX3NpemWUTkr+////hpSMBmF0dHJfeJRodEtmhpSMBmF0dHJfeZSMDmVu
cm9sbG1lbnRSYXRllEtmhpSMBWdyYXBolH2UaBVLBHVoLn2UKIwFaW5kZXiUSwJodEsCjA9zdHVk
ZW50c19udW1iZXKUSwKMFnN0dWRlbnRzX2ZlbWFsZV9udW1iZXKUSwKMF3N0dWRlbnRzX21vdmVP
dXRfbnVtYmVylEsCjBZzdHVkZW50c19tb3ZlSW5fbnVtYmVylEsCjBVnZW5lcmFsVGVhY2hlcl9u
dW1iZXKUSwKMHGdlbmVyYWxUZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMFnBvc2l0aW9uVGVhY2hl
cl9udW1iZXKUSwKMHXBvc2l0aW9uVGVhY2hlcl9mZW1hbGVfbnVtYmVylEsCjApzY2hvb2xTaXpl
lEsCjBJudW1iZXJPZkRlcGFydG1lbnSUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowScmVn
aW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90YWyU
SwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlCb29rlEsCjA5lbXBsb3ltZW50UmF0
ZZRLAmh/SwKMFmJvb2tUb3RhbF9zdHVkZW50UmF0aW+USwKMHGJvb2tfeWVhcmx5VXNlcl9zdHVk
ZW50UmF0aW+USwKMHGJvb2tfeWVhcmx5Qm9va19zdHVkZW50UmF0aW+USwJ1aEd9lHViZXUu
</properties>
		<properties node_id="8" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x7f\xff\xff\xff\xf8\x00\x00\x0f\x00\x00\x00\x04\x10\x00\x00\x0bA\x00\x00\x00\x1f\x00\x00\x0e\xfe\x00\x00\x04\x0e\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00\x17\x00\x00\x0e\xff\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    students_number_tmp = 0\n    students_female_number_tmp = 0\n    students_moveOut_number_tmp = 0\n    students_moveIn_number_tmp = 0\n    generalTeacher_number_tmp = 0\n    generalTeacher_female_number_tmp = 0\n    schoolSize_tmp = 0\n    generalClassNumber_tmp = 0\n    specialClassNumber_tmp = 0\n\n    for i in range(len(school)):\n        \n        if (i == 22) :\n            # 취업률\n            employmentRate_tmp = school[i]\n            list_forTmp.append(employmentRate_tmp)\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate_tmp = school[i]\n            list_forTmp.append(enrollmentRate_tmp)\n        \n        if (i == 3) :\n            # 학생 수\n            students_number_tmp = school[i]\n\n        if (i == 4) : \n            # 여학생 수 \n            students_female_number_tmp = school[i]\n        \n        if (i == 5) : \n            # 전출\n            students_moveOut_number_tmp = school[i]\n\n        if (i == 6) : \n            # 전입\n            students_moveIn_number_tmp = school[i]\n\n        if (i == 7) :\n            # 일반교사 수 \n            generalTeacher_number_tmp = school[i]\n\n        if (i == 8) : \n            # 여교사 수 \n            generalTeacher_female_number_tmp = school[i]\n\n        if (i == 11) :\n            # 학교 면적\n            schoolSize_tmp = school[i]\n\n        if (i == 12) : \n            # 일반교실 수 \n            generalClassNumber_tmp = school[i]\n\n        if (i == 13) : \n            # 특수교실 수 \n            specialClassNumber_tmp = school[i]\n        \n        \n    # 인망률\n    list_forTmp.append((1 - enrollmentRate_tmp) * (1 - employmentRate_tmp))\n    \n    # 학생 sexRatio\n    list_forTmp.append(students_female_number_tmp / students_number_tmp)\n    \n    # 전체 학생 수 전출·입 비\n    list_forTmp.append(students_moveOut_number_tmp / students_number_tmp)\n    list_forTmp.append(students_moveIn_number_tmp / students_number_tmp)\n\n    if (generalTeacher_number_tmp != 0):\n        # 교사 sexRatio\n        list_forTmp.append(generalTeacher_female_number_tmp / generalTeacher_number_tmp)\n    \n    # 학생 교사 ratio\n    list_forTmp.append(generalTeacher_number_tmp / students_number_tmp)\n\n    # 학생 남교사 ratio\n    list_forTmp.append((generalTeacher_number_tmp - generalTeacher_female_number_tmp) / students_number_tmp)\n\n    # 학생 여교사 ratio\n    list_forTmp.append(generalTeacher_female_number_tmp / students_number_tmp)\n\n    # 학생 특수교실 수 ratio\n    list_forTmp.append(specialClassNumber_tmp / students_number_tmp)\n\n    # 학생 학교 크기 ratio\n    list_forTmp.append(schoolSize_tmp / students_number_tmp)\n\n    # 학교 크기, 교실 수 ratio\n    list_forTmp.append(schoolSize_tmp / (generalClassNumber_tmp + specialClassNumber_tmp))\n\n    list_forLongLive.append(list_forTmp)\n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n# 학생 sexRatio\nstudents_sexRatio = ContinuousVariable("students_sexRatio")\n# 전출·입 ratio\nstudents_moveOut_ratio = ContinuousVariable("students_moveOut_ratio")\nstudents_moveIn_ratio = ContinuousVariable("students_moveIn_ratio")\n# 교사 sexRatio\ngeneralTeacher_sexRatio = ContinuousVariable("generalTeacher_sexRatio")\n# 학생 교사 ratio\nstudents_generalTeacher_ratio = ContinuousVariable("students_generalTeacher_ratio")\n# 학생 남교사 ratio\nstudents_maleTeacher_ratio = ContinuousVariable("students_maleTeacher_ratio")\n# 학생 여교사 ratio\nstudents_femaleTeacher_ratio = ContinuousVariable("students_femaleTeacher_ratio")\n# 학생 특수교실 수 ratio\nstudents_specialClass_ratio = ContinuousVariable("students_specialClass_ratio")\n# 학생 학교 크기 ratio\nstudents_schoolSize_ratio = ContinuousVariable("students_schoolSize_ratio")\n# 학교 크기, 교실 수 ratio\nschoolSize_class_ratio = ContinuousVariable("schoolSize_class_ratio")\n\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime, \n                 students_sexRatio, \n                 students_moveOut_ratio, \n                 students_moveIn_ratio, \n                 generalTeacher_sexRatio, \n                 students_generalTeacher_ratio, \n                 students_maleTeacher_ratio, \n                 students_femaleTeacher_ratio, \n                 students_specialClass_ratio, \n                 students_schoolSize_ratio, \n                 schoolSize_class_ratio\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="9" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': None, 'selected_rows': None, 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="10" format="pickle">gASVCAMAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBjb3JyZWxhdGlvbl90eXBllEsA
jBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAI2AAAAggAABUIAAAOJAAACNgAAAIIA
AAVCAAADiQAAAAAAAAAAB4AAAAI2AAAAggAABUIAAAOJlIwLX192ZXJzaW9uX1+USwOMEGNvbnRl
eHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQo
jAZ2YWx1ZXOUfZQojAdmZWF0dXJllIwWc2Nob29sU2l6ZV9jbGFzc19yYXRpb5RLZoaUjAlzZWxl
Y3Rpb26UXZQoaBBLZoaUjBZzdHVkZW50c19tb3ZlT3V0X3JhdGlvlEtmhpRlSv3///+GlGgFSwN1
jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRSYXRllEsCjA9i
YWJ5T25lTW9yZVRpbWWUSwKMEXN0dWRlbnRzX3NleFJhdGlvlEsCaBVLAowVc3R1ZGVudHNfbW92
ZUluX3JhdGlvlEsCjBdnZW5lcmFsVGVhY2hlcl9zZXhSYXRpb5RLAowdc3R1ZGVudHNfZ2VuZXJh
bFRlYWNoZXJfcmF0aW+USwKMGnN0dWRlbnRzX21hbGVUZWFjaGVyX3JhdGlvlEsCjBxzdHVkZW50
c19mZW1hbGVUZWFjaGVyX3JhdGlvlEsCjBtzdHVkZW50c19zcGVjaWFsQ2xhc3NfcmF0aW+USwKM
GXN0dWRlbnRzX3NjaG9vbFNpemVfcmF0aW+USwJoEEsCdYwFbWV0YXOUfZR1YmgKKYGUfZQoaA19
lChoD2gQS2aGlGgSXZQoaBBLZoaUaBVLZoaUZUr9////hpRoBUsDdWgYfZQoaBpLAmgbSwJoHUsC
aBVLAmgeSwJoH0sCaCBLAmghSwJoIksCaCNLAmgkSwJoEEsCdWglfZR1YmV1Lg==
</properties>
		<properties node_id="11" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x07\x7f\xff\xff\xff\xf8\x00\x00\x0f\x00\x00\x00\x04\x10\x00\x00\x04\x81\x00\x00\x00\xef\x00\x00\x0c\x00\x00\x00\x04\xe7\x00\x00\x00\x01\x02\x00\x00\x00\x07\x80\x00\x00\x07\x80\x00\x00\x00\x17\x00\x00\x0e\xff\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 2) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 1) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="12" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="13" format="pickle">gASVcAIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/gAAAQ4AAAWBAAADAQAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCaBhLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQoaBdoIEtmhpRoGk5K/v///4aUaBwp
Sv7///+GlGgNSwF1aB59lCiMDmVtcGxveW1lbnRSYXRllEsCjA5lbnJvbGxtZW50UmF0ZZRLAnVo
In2UdWJldS4=
</properties>
		<properties node_id="14" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 2) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 2) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="15" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="16" format="pickle">gASVjgIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/QAAAO8AAAWCAAADAgAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCaBhLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQojAlhdHRyaWJ1dGWUjA5lbXBsb3lt
ZW50UmF0ZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7///+GlGgNSwF1
aB59lChoKEsCjA5lbnJvbGxtZW50UmF0ZZRLAnVoIn2UdWJldS4=
</properties>
		<properties node_id="17" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00~\x00\x00\x00\x87\x00\x00\x03\xa1\x00\x00\x02\xde\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 2) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 4) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="18" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="19" format="pickle">gASVjgIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/QAAAO8AAAWCAAADAgAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCaBhLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQojAlhdHRyaWJ1dGWUjA5lbXBsb3lt
ZW50UmF0ZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7///+GlGgNSwF1
aB59lChoKEsCjA5lbnJvbGxtZW50UmF0ZZRLAnVoIn2UdWJldS4=
</properties>
		<properties node_id="20" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 2) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 5) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="21" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="22" format="pickle">gASVjgIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/QAAAO8AAAWCAAADAgAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCaBhLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQojAlhdHRyaWJ1dGWUjA5lbXBsb3lt
ZW50UmF0ZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7///+GlGgNSwF1
aB59lChoKEsCjA5lbnJvbGxtZW50UmF0ZZRLAnVoIn2UdWJldS4=
</properties>
		<properties node_id="23" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 2) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 8) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="24" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="25" format="pickle">gASVjgIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/QAAAO8AAAWCAAADAgAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCaBhLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQojAlhdHRyaWJ1dGWUjA5lbXBsb3lt
ZW50UmF0ZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7///+GlGgNSwF1
aB59lChoKEsCjA5lbnJvbGxtZW50UmF0ZZRLAnVoIn2UdWJldS4=
</properties>
		<properties node_id="26" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    students_number_tmp = 0\n    students_female_number_tmp = 0\n    students_moveOut_number_tmp = 0\n    students_moveIn_number_tmp = 0\n    generalTeacher_number_tmp = 0\n    generalTeacher_female_number_tmp = 0\n    schoolSize_tmp = 0\n    generalClassNumber_tmp = 0\n    specialClassNumber_tmp = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 18):\n            continue\n        else:\n            if (i == 22) : \n                employmentRate_tmp = school[i]\n            if (i == 23) : \n                enrollmentRate_tmp = school[i]\n            if (i == 3) :\n                # 학생 수\n                students_number_tmp = school[i]\n\n            if (i == 4) : \n                # 여학생 수 \n                students_female_number_tmp = school[i]\n            \n            if (i == 5) : \n                # 전출\n                students_moveOut_number_tmp = school[i]\n\n            if (i == 6) : \n                # 전입\n                students_moveIn_number_tmp = school[i]\n\n            if (i == 7) :\n                # 일반교사 수 \n                generalTeacher_number_tmp = school[i]\n\n            if (i == 8) : \n                # 여교사 수 \n                generalTeacher_female_number_tmp = school[i]\n\n            if (i == 11) :\n                # 학교 면적\n                schoolSize_tmp = school[i]\n\n            if (i == 12) : \n                # 일반교실 수 \n                generalClassNumber_tmp = school[i]\n\n            if (i == 13) : \n                # 특수교실 수 \n                specialClassNumber_tmp = school[i]\n        \n            list_forTmp.append(school[i])\n    # 인망률\n    list_forTmp.append((1 - enrollmentRate_tmp) * (1 - employmentRate_tmp))\n    \n    # ratio 들 \n    # 학생 sexRatio\n    list_forTmp.append(students_female_number_tmp / students_number_tmp)\n    \n    # 전체 학생 수 전출·입 비\n    list_forTmp.append(students_moveOut_number_tmp / students_number_tmp)\n    list_forTmp.append(students_moveIn_number_tmp / students_number_tmp)\n\n    if (generalTeacher_number_tmp != 0):\n        # 교사 sexRatio\n        list_forTmp.append(generalTeacher_female_number_tmp / generalTeacher_number_tmp)\n    \n    # 학생 교사 ratio\n    list_forTmp.append(generalTeacher_number_tmp / students_number_tmp)\n\n    # 학생 남교사 ratio\n    list_forTmp.append((generalTeacher_number_tmp - generalTeacher_female_number_tmp) / students_number_tmp)\n\n    # 학생 여교사 ratio\n    list_forTmp.append(generalTeacher_female_number_tmp / students_number_tmp)\n    \n    # 학생 일반교실 수 ratio\n    list_forTmp.append(generalClassNumber_tmp / students_number_tmp)\n\n    # 학생 특수교실 수 ratio\n    list_forTmp.append(specialClassNumber_tmp / students_number_tmp)\n\n    # 학생 학교 크기 ratio\n    list_forTmp.append(schoolSize_tmp / students_number_tmp)\n\n    # 학교 크기, 교실 수 ratio\n    list_forTmp.append(schoolSize_tmp / (generalClassNumber_tmp + specialClassNumber_tmp))\n\n    list_forLongLive.append(list_forTmp)\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\ngeneralClassNumber = ContinuousVariable("generalClassNumber")\nspecialClassNumber = ContinuousVariable("specialClassNumber")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n# 학생 sexRatio\nstudents_sexRatio = ContinuousVariable("students_sexRatio")\n# 전출·입 ratio\nstudents_moveOut_ratio = ContinuousVariable("students_moveOut_ratio")\nstudents_moveIn_ratio = ContinuousVariable("students_moveIn_ratio")\n# 교사 sexRatio\ngeneralTeacher_sexRatio = ContinuousVariable("generalTeacher_sexRatio")\n# 학생 교사 ratio\nstudents_generalTeacher_ratio = ContinuousVariable("students_generalTeacher_ratio")\n# 학생 남교사 ratio\nstudents_maleTeacher_ratio = ContinuousVariable("students_maleTeacher_ratio")\n# 학생 여교사 ratio\nstudents_femaleTeacher_ratio = ContinuousVariable("students_femaleTeacher_ratio")\n# 학생 일반교실 수 ratio\nstudents_generalClass_ratio = ContinuousVariable("students_generalClass_ratio")\n# 학생 특수교실 수 ratio\nstudents_specialClass_ratio = ContinuousVariable("students_specialClass_ratio")\n# 학생 학교 크기 ratio\nstudents_schoolSize_ratio = ContinuousVariable("students_schoolSize_ratio")\n# 학교 크기, 교실 수 ratio\nschoolSize_class_ratio = ContinuousVariable("schoolSize_class_ratio")\n\n\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 generalClassNumber, \n                 specialClassNumber, \n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime, \n                 students_sexRatio, \n                 students_moveOut_ratio, \n                 students_moveIn_ratio, \n                 generalTeacher_sexRatio, \n                 students_generalTeacher_ratio, \n                 students_maleTeacher_ratio, \n                 students_femaleTeacher_ratio, \n                 students_generalClass_ratio, \n                 students_specialClass_ratio, \n                 students_schoolSize_ratio, \n                 schoolSize_class_ratio\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="27" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="28" format="pickle">gASVUQUAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBjb3JyZWxhdGlvbl90eXBllEsA
jBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAI2AAAAggAABUIAAAOJAAACNgAAAIIA
AAVCAAADiQAAAAAAAAAAB4AAAAI2AAAAggAABUIAAAOJlIwLX192ZXJzaW9uX1+USwOMEGNvbnRl
eHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQo
jAZ2YWx1ZXOUfZQojAdmZWF0dXJllIwWc3R1ZGVudHNfbW92ZU91dF9yYXRpb5RLZoaUjAlzZWxl
Y3Rpb26UXZQojAVpbmRleJRLZoaUaBBLZoaUZUr9////hpRoBUsDdYwKYXR0cmlidXRlc5R9lCho
FEsCjBJzY2hvb2xOYW1lX2tleVdvcmSUSwKMD3N0dWRlbnRzX251bWJlcpRLAowWc3R1ZGVudHNf
ZmVtYWxlX251bWJlcpRLAowXc3R1ZGVudHNfbW92ZU91dF9udW1iZXKUSwKMFnN0dWRlbnRzX21v
dmVJbl9udW1iZXKUSwKMFWdlbmVyYWxUZWFjaGVyX251bWJlcpRLAowcZ2VuZXJhbFRlYWNoZXJf
ZmVtYWxlX251bWJlcpRLAowWcG9zaXRpb25UZWFjaGVyX251bWJlcpRLAowdcG9zaXRpb25UZWFj
aGVyX2ZlbWFsZV9udW1iZXKUSwKMCnNjaG9vbFNpemWUSwKMEm51bWJlck9mRGVwYXJ0bWVudJRL
AowSZ2VuZXJhbENsYXNzTnVtYmVylEsCjBJzcGVjaWFsQ2xhc3NOdW1iZXKUSwKMFXJlZ2lvbmFs
QXZlcmFnZUluY29tZZRLAowScmVnaW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9t
ZW50dW2USwKMCmJvb2tfdG90YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlC
b29rlEsCjA5lbXBsb3ltZW50UmF0ZZRLAowOZW5yb2xsbWVudFJhdGWUSwKMD2JhYnlPbmVNb3Jl
VGltZZRLAowRc3R1ZGVudHNfc2V4UmF0aW+USwJoEEsCjBVzdHVkZW50c19tb3ZlSW5fcmF0aW+U
SwKMF2dlbmVyYWxUZWFjaGVyX3NleFJhdGlvlEsCjB1zdHVkZW50c19nZW5lcmFsVGVhY2hlcl9y
YXRpb5RLAowac3R1ZGVudHNfbWFsZVRlYWNoZXJfcmF0aW+USwKMHHN0dWRlbnRzX2ZlbWFsZVRl
YWNoZXJfcmF0aW+USwKMG3N0dWRlbnRzX2dlbmVyYWxDbGFzc19yYXRpb5RLAowbc3R1ZGVudHNf
c3BlY2lhbENsYXNzX3JhdGlvlEsCjBlzdHVkZW50c19zY2hvb2xTaXplX3JhdGlvlEsCjBZzY2hv
b2xTaXplX2NsYXNzX3JhdGlvlEsCdYwFbWV0YXOUfZR1YmgKKYGUfZQoaA19lChoD2gQS2aGlGgS
XZQoaBRLZoaUaBBLZoaUZUr9////hpRoBUsDdWgYfZQoaBRLAmgaSwJoG0sCaBxLAmgdSwJoHksC
aB9LAmggSwJoIUsCaCJLAmgjSwJoJEsCaCVLAmgmSwJoJ0sCaChLAmgpSwJoKksCaCtLAmgsSwJo
LUsCaC5LAmgvSwJoMEsCaBBLAmgxSwJoMksCaDNLAmg0SwJoNUsCaDdLAmg4SwJoOUsCdWg6fZR1
YmV1Lg==
</properties>
		<properties node_id="29" format="pickle">gASVmQYAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMC2F1dG9fc2FtcGxllIiMEmNvbnRyb2xBcmVh
VmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAGeAAAAnwAABgsAAAOC
AAABnwAAAL4AAAYKAAADgQAAAAAAAAAAB4AAAAGfAAAAvgAABgoAAAOBlIwJc2VsZWN0aW9ulF2U
jBF0b29sdGlwX3Nob3dzX2FsbJSIjA92aXN1YWxfc2V0dGluZ3OUfZSMBWdyYXBolH2UKIwLYWxw
aGFfdmFsdWWUS4CMDWNsYXNzX2RlbnNpdHmUiYwLaml0dGVyX3NpemWUSwCME2xhYmVsX29ubHlf
c2VsZWN0ZWSUiYwWb3J0aG9ub3JtYWxfcmVncmVzc2lvbpSJjAtwb2ludF93aWR0aJRLCowJc2hv
d19ncmlklImMC3Nob3dfbGVnZW5klIiMDXNob3dfcmVnX2xpbmWUiXWMC19fdmVyc2lvbl9flEsE
jBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJST
lCmBlH2UKIwGdmFsdWVzlH2UKIwKYXR0cl9jb2xvcpROSv7///+GlIwKYXR0cl9sYWJlbJROSv7/
//+GlIwKYXR0cl9zaGFwZZROSv7///+GlIwJYXR0cl9zaXpllE5K/v///4aUjAZhdHRyX3iUjA5l
bnJvbGxtZW50UmF0ZZRLZoaUjAZhdHRyX3mUjBVyZWdpb25hbEF2ZXJhZ2VJbmNvbWWUS2aGlGgL
fZRoFksEdYwKYXR0cmlidXRlc5R9lCiMBWluZGV4lEsCjBJzY2hvb2xOYW1lX2tleVdvcmSUSwKM
D3N0dWRlbnRzX251bWJlcpRLAowWc3R1ZGVudHNfZmVtYWxlX251bWJlcpRLAowXc3R1ZGVudHNf
bW92ZU91dF9udW1iZXKUSwKMFnN0dWRlbnRzX21vdmVJbl9udW1iZXKUSwKMFWdlbmVyYWxUZWFj
aGVyX251bWJlcpRLAowcZ2VuZXJhbFRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowWcG9zaXRpb25U
ZWFjaGVyX251bWJlcpRLAowdcG9zaXRpb25UZWFjaGVyX2ZlbWFsZV9udW1iZXKUSwKMCnNjaG9v
bFNpemWUSwKMEm51bWJlck9mRGVwYXJ0bWVudJRLAowSZ2VuZXJhbENsYXNzTnVtYmVylEsCjBJz
cGVjaWFsQ2xhc3NOdW1iZXKUSwJoLEsCjBJyZWdpb25hbFByaWNlUGVyUHmUSwKMFXJlZ2lvbmFs
UHJpY2VNb21lbnR1bZRLAowKYm9va190b3RhbJRLAowPYm9va195ZWFybHlVc2VylEsCjA9ib29r
X3llYXJseUJvb2uUSwKMDmVtcGxveW1lbnRSYXRllEsCaClLAowPYmFieU9uZU1vcmVUaW1llEsC
jBFzdHVkZW50c19zZXhSYXRpb5RLAowWc3R1ZGVudHNfbW92ZU91dF9yYXRpb5RLAowVc3R1ZGVu
dHNfbW92ZUluX3JhdGlvlEsCjBdnZW5lcmFsVGVhY2hlcl9zZXhSYXRpb5RLAowdc3R1ZGVudHNf
Z2VuZXJhbFRlYWNoZXJfcmF0aW+USwKMGnN0dWRlbnRzX21hbGVUZWFjaGVyX3JhdGlvlEsCjBxz
dHVkZW50c19mZW1hbGVUZWFjaGVyX3JhdGlvlEsCjBtzdHVkZW50c19nZW5lcmFsQ2xhc3NfcmF0
aW+USwKMG3N0dWRlbnRzX3NwZWNpYWxDbGFzc19yYXRpb5RLAowZc3R1ZGVudHNfc2Nob29sU2l6
ZV9yYXRpb5RLAowWc2Nob29sU2l6ZV9jbGFzc19yYXRpb5RLAnWMBW1ldGFzlH2UdWJoGymBlH2U
KGgefZQoaCBOSv7///+GlGgiTkr+////hpRoJE5K/v///4aUaCZOSv7///+GlGgoaClLZoaUaCto
LEtmhpRoC32UaBZLBHVoL32UKGgxSwJoMksCaDNLAmg0SwJoNUsCaDZLAmg3SwJoOEsCaDlLAmg6
SwJoO0sCaDxLAmg9SwJoPksCaCxLAmg/SwJoQEsCaEFLAmhCSwJoQ0sCaERLAmgpSwJoRUsCaEZL
AmhHSwJoSEsCaElLAmhKSwJoS0sCaExLAmhOSwJoT0sCaFBLAnVoUX2UdWJldS4=
</properties>
		<properties node_id="30" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of `forDataCompetition`.`schools` are saved in "schools".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    employmentRate = 0\n    enrollmentRate = 0\n    schoolNameKeyWord_tmp = -1\n\n    for i in range(len(school)) :\n        if (i == 22) :\n            # 취업률\n            employmentRate = school[i]\n        \n        if (i == 23) :\n            # 진학률\n            enrollmentRate = school[i]\n        \n        if (i == 7) : \n            # 학교 이름 키워드 \n            schoolNameKeyWord_tmp = school[i]\n        \n    if (schoolNameKeyWord_tmp == 8) : \n        list_forTmp.append(employmentRate)\n        list_forTmp.append(enrollmentRate)\n        list_forTmp.append((1 - enrollmentRate) * (1 - employmentRate))\n        list_forLongLive.append(list_forTmp)\n    \n\n\n\n# 오만오천번정도\n\n# 취업률\nemploymentRate = ContinuousVariable("employmentRate")\n# 진학률\nenrollmentRate = ContinuousVariable("enrollmentRate")\n# 인망률\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n\n\n\n\n# set domain\ndomain = Domain([\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime\n                 ])\n\n\n# Final data\n# Data seen at the output of the Python_Script widget.\nout_data = Table(domain, list_forLongLive)\nprint(out_data)  # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="31" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="32" format="pickle">gASVngIAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAB/gAAAQ4AAAWBAAADAQAAAf4AAAEOAAAFgQAAAwEAAAAA
AAAAAAeAAAAB/gAAAQ4AAAWBAAADAZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
D2JhYnlPbmVNb3JlVGltZZRLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNlbGVjdGlvbpQpSv7/
//+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwOZW1wbG95bWVudFJhdGWUSwKMDmVucm9sbG1lbnRS
YXRllEsCjA9iYWJ5T25lTW9yZVRpbWWUSwJ1jAVtZXRhc5R9lHViaBIpgZR9lChoFX2UKIwJYXR0
cmlidXRllIwOZW1wbG95bWVudFJhdGWUS2aGlIwJZ3JvdXBfdmFylE5K/v///4aUjAlzZWxlY3Rp
b26UKUr+////hpRoDUsBdWgefZQoaClLAowOZW5yb2xsbWVudFJhdGWUSwJ1aCN9lHViZXUu
</properties>
		<properties node_id="33" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    students_number_tmp = 0\n    students_female_number_tmp = 0\n    students_moveOut_number_tmp = 0\n    students_moveIn_number_tmp = 0\n    generalTeacher_number_tmp = 0\n    generalTeacher_female_number_tmp = 0\n    schoolSize_tmp = 0\n    generalClassNumber_tmp = 0\n    specialClassNumber_tmp = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 18):\n            continue\n        else:\n            if (i == 22) : \n                employmentRate_tmp = school[i]\n            if (i == 23) : \n                enrollmentRate_tmp = school[i]\n            if (i == 3) :\n                # 학생 수\n                students_number_tmp = school[i]\n\n            if (i == 4) : \n                # 여학생 수 \n                students_female_number_tmp = school[i]\n            \n            if (i == 5) : \n                # 전출\n                students_moveOut_number_tmp = school[i]\n\n            if (i == 6) : \n                # 전입\n                students_moveIn_number_tmp = school[i]\n\n            if (i == 7) :\n                # 일반교사 수 \n                generalTeacher_number_tmp = school[i]\n\n            if (i == 8) : \n                # 여교사 수 \n                generalTeacher_female_number_tmp = school[i]\n\n            if (i == 11) :\n                # 학교 면적\n                schoolSize_tmp = school[i]\n\n            if (i == 12) : \n                # 일반교실 수 \n                generalClassNumber_tmp = school[i]\n\n            if (i == 13) : \n                # 특수교실 수 \n                specialClassNumber_tmp = school[i]\n        \n            list_forTmp.append(school[i])\n    # 인망률\n    list_forTmp.append((1 - enrollmentRate_tmp) * (1 - employmentRate_tmp))\n    \n    # ratio 들 \n    # 학생 sexRatio\n    list_forTmp.append(students_female_number_tmp / students_number_tmp)\n    \n    # 전체 학생 수 전출·입 비\n    list_forTmp.append(students_moveOut_number_tmp / students_number_tmp)\n    list_forTmp.append(students_moveIn_number_tmp / students_number_tmp)\n\n    if (generalTeacher_number_tmp != 0):\n        # 교사 sexRatio\n        list_forTmp.append(generalTeacher_female_number_tmp / generalTeacher_number_tmp)\n    \n    # 학생 교사 ratio\n    list_forTmp.append(generalTeacher_number_tmp / students_number_tmp)\n\n    # 학생 남교사 ratio\n    list_forTmp.append((generalTeacher_number_tmp - generalTeacher_female_number_tmp) / students_number_tmp)\n\n    # 학생 여교사 ratio\n    list_forTmp.append(generalTeacher_female_number_tmp / students_number_tmp)\n\n    # 학생 특수교실 수 ratio\n    list_forTmp.append(specialClassNumber_tmp / students_number_tmp)\n\n    # 학생 학교 크기 ratio\n    list_forTmp.append(schoolSize_tmp / students_number_tmp)\n\n    # 학교 크기, 교실 수 ratio\n    list_forTmp.append(schoolSize_tmp / (generalClassNumber_tmp + specialClassNumber_tmp))\n\n    if (enrollmentRate_tmp &gt; 0.5) :\n        list_forLongLive.append(list_forTmp)\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\ngeneralClassNumber = ContinuousVariable("generalClassNumber")\nspecialClassNumber = ContinuousVariable("specialClassNumber")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n# 학생 sexRatio\nstudents_sexRatio = ContinuousVariable("students_sexRatio")\n# 전출·입 ratio\nstudents_moveOut_ratio = ContinuousVariable("students_moveOut_ratio")\nstudents_moveIn_ratio = ContinuousVariable("students_moveIn_ratio")\n# 교사 sexRatio\ngeneralTeacher_sexRatio = ContinuousVariable("generalTeacher_sexRatio")\n# 학생 교사 ratio\nstudents_generalTeacher_ratio = ContinuousVariable("students_generalTeacher_ratio")\n# 학생 남교사 ratio\nstudents_maleTeacher_ratio = ContinuousVariable("students_maleTeacher_ratio")\n# 학생 여교사 ratio\nstudents_femaleTeacher_ratio = ContinuousVariable("students_femaleTeacher_ratio")\n# 학생 특수교실 수 ratio\nstudents_specialClass_ratio = ContinuousVariable("students_specialClass_ratio")\n# 학생 학교 크기 ratio\nstudents_schoolSize_ratio = ContinuousVariable("students_schoolSize_ratio")\n# 학교 크기, 교실 수 ratio\nschoolSize_class_ratio = ContinuousVariable("schoolSize_class_ratio")\n\n\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 generalClassNumber, \n                 specialClassNumber, \n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime, \n                 students_sexRatio, \n                 students_moveOut_ratio, \n                 students_moveIn_ratio, \n                 generalTeacher_sexRatio, \n                 students_generalTeacher_ratio, \n                 students_maleTeacher_ratio, \n                 students_femaleTeacher_ratio, \n                 students_specialClass_ratio, \n                 students_schoolSize_ratio, \n                 schoolSize_class_ratio\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="34" format="literal">{'auto_commit': False, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x03\x86\x00\x00\x01\xc1\x00\x00\x06\xa5\x00\x00\x03\xb4\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': True, 'selected_cols': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], 'selected_rows': [113, 91, 140, 141, 107, 119, 117, 131, 106, 126, 59, 92, 2, 103, 147, 134, 135, 72, 138, 110, 118, 114, 150, 120, 145, 25, 24, 86, 112, 93, 63, 133, 123, 82, 36, 11, 125, 104, 124, 29, 50, 149, 101, 108, 96, 121, 94, 81, 132, 28, 16, 32, 37, 64, 79, 136, 111, 105, 42, 148, 109, 71, 19, 30, 18, 76, 139, 47, 22, 115, 55, 31, 146, 0, 137, 57, 102, 62, 90, 26, 65, 116, 35, 58, 95, 74, 153, 38, 14, 142, 46, 100, 130, 33, 23, 60, 21, 144, 85, 45, 3, 70, 49, 41, 13, 27, 53, 54, 51, 128, 129, 67, 84, 40, 48, 80, 8, 127, 43, 52, 143, 122, 56, 44, 39, 7, 68, 69, 5, 1, 89, 87, 77, 66, 6, 78, 83, 98, 9, 61, 4, 12, 17, 75, 151, 97, 99, 152, 15, 73, 20, 88, 34], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="35" format="pickle">gASVnQUAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAHeQAAAK4AAAr+AAACwQAAB3oAAADNAAAK/QAAAsAAAAAB
AAAAAAeAAAAHegAAAM0AAAr9AAACwJSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
G3N0dWRlbnRzX3NwZWNpYWxDbGFzc19yYXRpb5RLZoaUjAlncm91cF92YXKUTkr+////hpSMCXNl
bGVjdGlvbpQpSv7///+GlGgNSwF1jAphdHRyaWJ1dGVzlH2UKIwFaW5kZXiUSwKMEnNjaG9vbE5h
bWVfa2V5V29yZJRLAowPc3R1ZGVudHNfbnVtYmVylEsCjBZzdHVkZW50c19mZW1hbGVfbnVtYmVy
lEsCjBdzdHVkZW50c19tb3ZlT3V0X251bWJlcpRLAowWc3R1ZGVudHNfbW92ZUluX251bWJlcpRL
AowVZ2VuZXJhbFRlYWNoZXJfbnVtYmVylEsCjBxnZW5lcmFsVGVhY2hlcl9mZW1hbGVfbnVtYmVy
lEsCjBZwb3NpdGlvblRlYWNoZXJfbnVtYmVylEsCjB1wb3NpdGlvblRlYWNoZXJfZmVtYWxlX251
bWJlcpRLAowKc2Nob29sU2l6ZZRLAowSbnVtYmVyT2ZEZXBhcnRtZW50lEsCjBJnZW5lcmFsQ2xh
c3NOdW1iZXKUSwKMEnNwZWNpYWxDbGFzc051bWJlcpRLAowVcmVnaW9uYWxBdmVyYWdlSW5jb21l
lEsCjBJyZWdpb25hbFByaWNlUGVyUHmUSwKMFXJlZ2lvbmFsUHJpY2VNb21lbnR1bZRLAowKYm9v
a190b3RhbJRLAowPYm9va195ZWFybHlVc2VylEsCjA9ib29rX3llYXJseUJvb2uUSwKMDmVtcGxv
eW1lbnRSYXRllEsCjA5lbnJvbGxtZW50UmF0ZZRLAowPYmFieU9uZU1vcmVUaW1llEsCjBFzdHVk
ZW50c19zZXhSYXRpb5RLAowWc3R1ZGVudHNfbW92ZU91dF9yYXRpb5RLAowVc3R1ZGVudHNfbW92
ZUluX3JhdGlvlEsCjBdnZW5lcmFsVGVhY2hlcl9zZXhSYXRpb5RLAowdc3R1ZGVudHNfZ2VuZXJh
bFRlYWNoZXJfcmF0aW+USwKMGnN0dWRlbnRzX21hbGVUZWFjaGVyX3JhdGlvlEsCjBxzdHVkZW50
c19mZW1hbGVUZWFjaGVyX3JhdGlvlEsCaBhLAowZc3R1ZGVudHNfc2Nob29sU2l6ZV9yYXRpb5RL
AowWc2Nob29sU2l6ZV9jbGFzc19yYXRpb5RLAnWMBW1ldGFzlH2UdWJoEimBlH2UKGgVfZQoaBdo
JEtmhpRoGk5K/v///4aUaBwpSv7///+GlGgNSwF1aB59lChoIEsCaCFLAmgiSwJoI0sCaCRLAmgl
SwJoJksCaCdLAmgoSwJoKUsCaCpLAmgrSwJoLEsCaC1LAmguSwJoL0sCaDBLAmgxSwJoMksCaDNL
Amg0SwJoNUsCaDZLAnVoQH2UdWJldS4=
</properties>
		<properties node_id="36" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    students_number_tmp = 0\n    students_female_number_tmp = 0\n    students_moveOut_number_tmp = 0\n    students_moveIn_number_tmp = 0\n    generalTeacher_number_tmp = 0\n    generalTeacher_female_number_tmp = 0\n    schoolSize_tmp = 0\n    generalClassNumber_tmp = 0\n    specialClassNumber_tmp = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 18):\n            continue\n        else:\n            if (i == 22) : \n                employmentRate_tmp = school[i]\n            if (i == 23) : \n                enrollmentRate_tmp = school[i]\n            if (i == 3) :\n                # 학생 수\n                students_number_tmp = school[i]\n\n            if (i == 4) : \n                # 여학생 수 \n                students_female_number_tmp = school[i]\n            \n            if (i == 5) : \n                # 전출\n                students_moveOut_number_tmp = school[i]\n\n            if (i == 6) : \n                # 전입\n                students_moveIn_number_tmp = school[i]\n\n            if (i == 7) :\n                # 일반교사 수 \n                generalTeacher_number_tmp = school[i]\n\n            if (i == 8) : \n                # 여교사 수 \n                generalTeacher_female_number_tmp = school[i]\n\n            if (i == 11) :\n                # 학교 면적\n                schoolSize_tmp = school[i]\n\n            if (i == 12) : \n                # 일반교실 수 \n                generalClassNumber_tmp = school[i]\n\n            if (i == 13) : \n                # 특수교실 수 \n                specialClassNumber_tmp = school[i]\n        \n            list_forTmp.append(school[i])\n    # 인망률\n    list_forTmp.append((1 - enrollmentRate_tmp) * (1 - employmentRate_tmp))\n    \n    # ratio 들 \n    # 학생 sexRatio\n    list_forTmp.append(students_female_number_tmp / students_number_tmp)\n    \n    # 전체 학생 수 전출·입 비\n    list_forTmp.append(students_moveOut_number_tmp / students_number_tmp)\n    list_forTmp.append(students_moveIn_number_tmp / students_number_tmp)\n\n    if (generalTeacher_number_tmp != 0):\n        # 교사 sexRatio\n        list_forTmp.append(generalTeacher_female_number_tmp / generalTeacher_number_tmp)\n    \n    # 학생 교사 ratio\n    list_forTmp.append(generalTeacher_number_tmp / students_number_tmp)\n\n    # 학생 남교사 ratio\n    list_forTmp.append((generalTeacher_number_tmp - generalTeacher_female_number_tmp) / students_number_tmp)\n\n    # 학생 여교사 ratio\n    list_forTmp.append(generalTeacher_female_number_tmp / students_number_tmp)\n\n    # 학생 특수교실 수 ratio\n    list_forTmp.append(specialClassNumber_tmp / students_number_tmp)\n\n    # 학생 학교 크기 ratio\n    list_forTmp.append(schoolSize_tmp / students_number_tmp)\n\n    # 학교 크기, 교실 수 ratio\n    list_forTmp.append(schoolSize_tmp / (generalClassNumber_tmp + specialClassNumber_tmp))\n\n    if (employmentRate_tmp &gt; 0.5) :\n        list_forLongLive.append(list_forTmp)\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\ngeneralClassNumber = ContinuousVariable("generalClassNumber")\nspecialClassNumber = ContinuousVariable("specialClassNumber")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n# 학생 sexRatio\nstudents_sexRatio = ContinuousVariable("students_sexRatio")\n# 전출·입 ratio\nstudents_moveOut_ratio = ContinuousVariable("students_moveOut_ratio")\nstudents_moveIn_ratio = ContinuousVariable("students_moveIn_ratio")\n# 교사 sexRatio\ngeneralTeacher_sexRatio = ContinuousVariable("generalTeacher_sexRatio")\n# 학생 교사 ratio\nstudents_generalTeacher_ratio = ContinuousVariable("students_generalTeacher_ratio")\n# 학생 남교사 ratio\nstudents_maleTeacher_ratio = ContinuousVariable("students_maleTeacher_ratio")\n# 학생 여교사 ratio\nstudents_femaleTeacher_ratio = ContinuousVariable("students_femaleTeacher_ratio")\n# 학생 특수교실 수 ratio\nstudents_specialClass_ratio = ContinuousVariable("students_specialClass_ratio")\n# 학생 학교 크기 ratio\nstudents_schoolSize_ratio = ContinuousVariable("students_schoolSize_ratio")\n# 학교 크기, 교실 수 ratio\nschoolSize_class_ratio = ContinuousVariable("schoolSize_class_ratio")\n\n\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 generalClassNumber, \n                 specialClassNumber, \n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime, \n                 students_sexRatio, \n                 students_moveOut_ratio, \n                 students_moveIn_ratio, \n                 generalTeacher_sexRatio, \n                 students_generalTeacher_ratio, \n                 students_maleTeacher_ratio, \n                 students_femaleTeacher_ratio, \n                 students_specialClass_ratio, \n                 students_schoolSize_ratio, \n                 schoolSize_class_ratio\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
		<properties node_id="37" format="literal">{'auto_commit': False, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': False, 'selected_cols': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], 'selected_rows': [97, 65, 152, 86, 114, 159, 162, 124, 121, 113, 141, 151, 132, 120, 136, 130, 66, 91, 122, 101, 75, 90, 98, 172, 128, 116, 142, 94, 156, 150, 147, 61, 33, 161, 100, 112, 164, 129, 158, 125, 105, 160, 95, 107, 84, 118, 108, 47, 70, 143, 4, 140, 37, 40, 109, 165, 22, 21, 173, 111, 145, 166, 34, 83, 169, 126, 69, 157, 170, 38, 148, 168, 110, 36, 92, 171, 15, 134, 35, 13, 176, 117, 71, 139, 138, 133, 12, 32, 63, 1, 62, 85, 60, 25, 167, 17, 149, 174, 106, 5, 20, 146, 137, 6, 144, 119, 93, 27, 49, 155, 30, 123, 0, 53, 50, 28, 135, 131, 44, 52, 127, 163, 29, 46, 16, 42, 19, 43, 56, 96, 79, 8, 57, 154, 89, 54, 45, 55, 48, 78, 14, 41, 82, 3, 24, 23, 81, 64, 10, 26, 18, 11, 102, 74, 7, 58, 51, 59, 99, 104, 175, 76, 115, 103, 68, 73, 80, 77, 88, 72, 87, 67, 31, 2, 9, 39], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="38" format="pickle">gASV0gUAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAHnwAAAdcAAAskAAAD6gAAB6AAAAH2AAALIwAAA+kAAAAB
AAAAAAeAAAAHoAAAAfYAAAsjAAAD6ZSMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
FnNjaG9vbFNpemVfY2xhc3NfcmF0aW+US2aGlIwJZ3JvdXBfdmFylE5K/v///4aUjAlzZWxlY3Rp
b26UKUr+////hpRoDUsBdYwKYXR0cmlidXRlc5R9lCiMBWluZGV4lEsCjBJzY2hvb2xOYW1lX2tl
eVdvcmSUSwKMD3N0dWRlbnRzX251bWJlcpRLAowWc3R1ZGVudHNfZmVtYWxlX251bWJlcpRLAowX
c3R1ZGVudHNfbW92ZU91dF9udW1iZXKUSwKMFnN0dWRlbnRzX21vdmVJbl9udW1iZXKUSwKMFWdl
bmVyYWxUZWFjaGVyX251bWJlcpRLAowcZ2VuZXJhbFRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowW
cG9zaXRpb25UZWFjaGVyX251bWJlcpRLAowdcG9zaXRpb25UZWFjaGVyX2ZlbWFsZV9udW1iZXKU
SwKMCnNjaG9vbFNpemWUSwKMEm51bWJlck9mRGVwYXJ0bWVudJRLAowSZ2VuZXJhbENsYXNzTnVt
YmVylEsCjBJzcGVjaWFsQ2xhc3NOdW1iZXKUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowS
cmVnaW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90
YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlCb29rlEsCjA5lbXBsb3ltZW50
UmF0ZZRLAowOZW5yb2xsbWVudFJhdGWUSwKMD2JhYnlPbmVNb3JlVGltZZRLAowRc3R1ZGVudHNf
c2V4UmF0aW+USwKMFnN0dWRlbnRzX21vdmVPdXRfcmF0aW+USwKMFXN0dWRlbnRzX21vdmVJbl9y
YXRpb5RLAowXZ2VuZXJhbFRlYWNoZXJfc2V4UmF0aW+USwKMHXN0dWRlbnRzX2dlbmVyYWxUZWFj
aGVyX3JhdGlvlEsCjBpzdHVkZW50c19tYWxlVGVhY2hlcl9yYXRpb5RLAowcc3R1ZGVudHNfZmVt
YWxlVGVhY2hlcl9yYXRpb5RLAowbc3R1ZGVudHNfc3BlY2lhbENsYXNzX3JhdGlvlEsCjBlzdHVk
ZW50c19zY2hvb2xTaXplX3JhdGlvlEsCjBZzY2hvb2xTaXplX2NsYXNzX3JhdGlvlEsCdYwFbWV0
YXOUfZR1YmgSKYGUfZQoaBV9lCiMCWF0dHJpYnV0ZZRoJEtmhpSMCWdyb3VwX3ZhcpROSv7///+G
lIwJc2VsZWN0aW9ulClK/v///4aUaA1LAXVoHn2UKGggSwJoIUsCaCJLAmgjSwJoJEsCaCVLAmgm
SwJoJ0sCaChLAmgpSwJoKksCaCtLAmgsSwJoLUsCaC5LAmgvSwJoMEsCaDFLAmgySwJoM0sCaDRL
Amg1SwJoNksCdWhBfZR1YmV1Lg==
</properties>
		<properties node_id="39" format="literal">{'auto_commit': False, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'select_rows': False, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="40" format="pickle">gASV0gUAAAAAAAB9lCiMB2NvbXBhcmWUSwKMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNvcmRlcl9i
eV9pbXBvcnRhbmNllImMHG9yZGVyX2dyb3VwaW5nX2J5X2ltcG9ydGFuY2WUiYwTc2F2ZWRXaWRn
ZXRHZW9tZXRyeZRDQgHZ0MsAAwAAAAAHgAAAABcAAA7/AAAEDwAAB4AAAAAXAAAO/wAABA8AAAAB
AgAAAAeAAAAHgAAAABcAAA7/AAAED5SMEHNob3dfYW5ub3RhdGlvbnOUiIwLc2hvd19sYWJlbHOU
iIwNc2lnX3RocmVzaG9sZJRHP6mZmZmZmZqMCnNvcnRfZnJlcXOUiYwIc3RhdHRlc3SUSwCMCXN0
cmV0Y2hlZJSJjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdp
ZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCWF0dHJpYnV0ZZSM
FnNjaG9vbFNpemVfY2xhc3NfcmF0aW+US2aGlIwJZ3JvdXBfdmFylE5K/v///4aUjAlzZWxlY3Rp
b26UKUr+////hpRoDUsBdYwKYXR0cmlidXRlc5R9lCiMBWluZGV4lEsCjBJzY2hvb2xOYW1lX2tl
eVdvcmSUSwKMD3N0dWRlbnRzX251bWJlcpRLAowWc3R1ZGVudHNfZmVtYWxlX251bWJlcpRLAowX
c3R1ZGVudHNfbW92ZU91dF9udW1iZXKUSwKMFnN0dWRlbnRzX21vdmVJbl9udW1iZXKUSwKMFWdl
bmVyYWxUZWFjaGVyX251bWJlcpRLAowcZ2VuZXJhbFRlYWNoZXJfZmVtYWxlX251bWJlcpRLAowW
cG9zaXRpb25UZWFjaGVyX251bWJlcpRLAowdcG9zaXRpb25UZWFjaGVyX2ZlbWFsZV9udW1iZXKU
SwKMCnNjaG9vbFNpemWUSwKMEm51bWJlck9mRGVwYXJ0bWVudJRLAowSZ2VuZXJhbENsYXNzTnVt
YmVylEsCjBJzcGVjaWFsQ2xhc3NOdW1iZXKUSwKMFXJlZ2lvbmFsQXZlcmFnZUluY29tZZRLAowS
cmVnaW9uYWxQcmljZVBlclB5lEsCjBVyZWdpb25hbFByaWNlTW9tZW50dW2USwKMCmJvb2tfdG90
YWyUSwKMD2Jvb2tfeWVhcmx5VXNlcpRLAowPYm9va195ZWFybHlCb29rlEsCjA5lbXBsb3ltZW50
UmF0ZZRLAowOZW5yb2xsbWVudFJhdGWUSwKMD2JhYnlPbmVNb3JlVGltZZRLAowRc3R1ZGVudHNf
c2V4UmF0aW+USwKMFnN0dWRlbnRzX21vdmVPdXRfcmF0aW+USwKMFXN0dWRlbnRzX21vdmVJbl9y
YXRpb5RLAowXZ2VuZXJhbFRlYWNoZXJfc2V4UmF0aW+USwKMHXN0dWRlbnRzX2dlbmVyYWxUZWFj
aGVyX3JhdGlvlEsCjBpzdHVkZW50c19tYWxlVGVhY2hlcl9yYXRpb5RLAowcc3R1ZGVudHNfZmVt
YWxlVGVhY2hlcl9yYXRpb5RLAowbc3R1ZGVudHNfc3BlY2lhbENsYXNzX3JhdGlvlEsCjBlzdHVk
ZW50c19zY2hvb2xTaXplX3JhdGlvlEsCjBZzY2hvb2xTaXplX2NsYXNzX3JhdGlvlEsCdYwFbWV0
YXOUfZR1YmgSKYGUfZQoaBV9lCiMCWF0dHJpYnV0ZZRoJEtmhpSMCWdyb3VwX3ZhcpROSv7///+G
lIwJc2VsZWN0aW9ulClK/v///4aUaA1LAXVoHn2UKGggSwJoIUsCaCJLAmgjSwJoJEsCaCVLAmgm
SwJoJ0sCaChLAmgpSwJoKksCaCtLAmgsSwJoLUsCaC5LAmgvSwJoMEsCaDFLAmgySwJoM0sCaDRL
Amg1SwJoNksCdWhBfZR1YmV1Lg==
</properties>
		<properties node_id="41" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\x07\x80\x00\x00\x04\x10\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f\x00\x00\x00\x00\x02\x00\x00\x00\x07\x80\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x07\x7f\x00\x00\x04\x0f', 'scriptLibrary': [{'name': 'henry', 'script': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\nconnecteur = connect(DSN=\'allForYou\') # "table1" from a MySQL server via ODBC connector.\ncurseur = connecteur.cursor() # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncurseur.execute("SELECT * FROM `forDataCompetition`.`schools`")\n\n# All data of "table1" are saved in "donnees".\ndonnees = curseur.fetchall()\n\nliste_globale = [] # Final list : It will contain the final data.\nliste_intermediaire = [] # Temporary list : Only used for conversion.\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor partie in donnees:\n    for i in range(len(partie)):\n        liste_intermediaire.append(partie[i])\n    liste_globale.append(liste_intermediaire)\n    liste_intermediaire = []\n\n# Creation of the data domain : Names of the variables seen in Orange WorkFlow.\nidentite = ContinuousVariable("Identification")\ncolonne1 = ContinuousVariable("Colonne1")\ncolonne2 = ContinuousVariable("Colonne2")\ncolonne3 = ContinuousVariable("Colonne3")\n\ndomaine = Domain([identite, colonne1, colonne2, colonne3])\n\n# Final data\nout_data = Table(domaine, liste_globale) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'filename': None}], 'scriptText': 'from Orange.data import Table, Domain, ContinuousVariable\nfrom pyodbc import connect\n\n# "table1" from a MySQL server via ODBC connector.\nconnecteur = connect(DSN=\'allForYou\')\ncursur = connecteur.cursor()  # Creation of the cursor for data swept.\n\n# Execution of the SQL Query.\ncursur.execute("SELECT * FROM `forDataCompetition`.`schools`;")\n\n# All data of "table1" are saved in "donnees".\nschools = cursur.fetchall()\n\n\nlist_forLongLive = []  # Final list : It will contain the final data.\n\n\n# Whereas having tuples as list elements, you must convert them into lists included into the main list.\nfor school in schools:\n    list_forTmp = []  # Temporary list : Only used for conversion.\n    enrollmentRate_tmp = 0\n    employmentRate_tmp = 0\n    students_number_tmp = 0\n    students_female_number_tmp = 0\n    students_moveOut_number_tmp = 0\n    students_moveIn_number_tmp = 0\n    generalTeacher_number_tmp = 0\n    generalTeacher_female_number_tmp = 0\n    schoolSize_tmp = 0\n    generalClassNumber_tmp = 0\n    specialClassNumber_tmp = 0\n    for i in range(len(school)):\n        if (i == 1 or i == 18):\n            continue\n        else:\n            if (i == 22) : \n                employmentRate_tmp = school[i]\n            if (i == 23) : \n                enrollmentRate_tmp = school[i]\n            if (i == 3) :\n                # 학생 수\n                students_number_tmp = school[i]\n\n            if (i == 4) : \n                # 여학생 수 \n                students_female_number_tmp = school[i]\n            \n            if (i == 5) : \n                # 전출\n                students_moveOut_number_tmp = school[i]\n\n            if (i == 6) : \n                # 전입\n                students_moveIn_number_tmp = school[i]\n\n            if (i == 7) :\n                # 일반교사 수 \n                generalTeacher_number_tmp = school[i]\n\n            if (i == 8) : \n                # 여교사 수 \n                generalTeacher_female_number_tmp = school[i]\n\n            if (i == 11) :\n                # 학교 면적\n                schoolSize_tmp = school[i]\n\n            if (i == 12) : \n                # 일반교실 수 \n                generalClassNumber_tmp = school[i]\n\n            if (i == 13) : \n                # 특수교실 수 \n                specialClassNumber_tmp = school[i]\n        \n            list_forTmp.append(school[i])\n    # 인망률\n    babyOneMoreTime_tmp = (1 - enrollmentRate_tmp) * (1 - employmentRate_tmp)\n    list_forTmp.append(babyOneMoreTime_tmp)\n    \n    # ratio 들 \n    # 학생 sexRatio\n    list_forTmp.append(students_female_number_tmp / students_number_tmp)\n    \n    # 전체 학생 수 전출·입 비\n    list_forTmp.append(students_moveOut_number_tmp / students_number_tmp)\n    list_forTmp.append(students_moveIn_number_tmp / students_number_tmp)\n\n    if (generalTeacher_number_tmp != 0):\n        # 교사 sexRatio\n        list_forTmp.append(generalTeacher_female_number_tmp / generalTeacher_number_tmp)\n    \n    # 학생 교사 ratio\n    list_forTmp.append(generalTeacher_number_tmp / students_number_tmp)\n\n    # 학생 남교사 ratio\n    list_forTmp.append((generalTeacher_number_tmp - generalTeacher_female_number_tmp) / students_number_tmp)\n\n    # 학생 여교사 ratio\n    list_forTmp.append(generalTeacher_female_number_tmp / students_number_tmp)\n\n    # 학생 특수교실 수 ratio\n    list_forTmp.append(specialClassNumber_tmp / students_number_tmp)\n\n    # 학생 학교 크기 ratio\n    list_forTmp.append(schoolSize_tmp / students_number_tmp)\n\n    # 학교 크기, 교실 수 ratio\n    list_forTmp.append(schoolSize_tmp / (generalClassNumber_tmp + specialClassNumber_tmp))\n\n    if (babyOneMoreTime_tmp &gt; 0.5) :\n        list_forLongLive.append(list_forTmp)\n\nindex = ContinuousVariable("index")\nschoolName_keyWord = ContinuousVariable("schoolName_keyWord")\nstudents_number = ContinuousVariable("students_number")\nstudents_female_number = ContinuousVariable("students_female_number")\nstudents_moveOut_number = ContinuousVariable("students_moveOut_number")\nstudents_moveIn_number = ContinuousVariable("students_moveIn_number")\ngeneralTeacher_number = ContinuousVariable("generalTeacher_number")\ngeneralTeacher_female_number = ContinuousVariable(\n    "generalTeacher_female_number")\npositionTeacher_number = ContinuousVariable("positionTeacher_number")\npositionTeacher_female_number = ContinuousVariable(\n    "positionTeacher_female_number")\nschoolSize = ContinuousVariable("schoolSize")\nnumberOfDepartment = ContinuousVariable("numberOfDepartment")\ngeneralClassNumber = ContinuousVariable("generalClassNumber")\nspecialClassNumber = ContinuousVariable("specialClassNumber")\nregionalAverageIncome = ContinuousVariable("regionalAverageIncome")\nregionalPricePerPy = ContinuousVariable("regionalPricePerPy")\nregionalPriceMomentum = ContinuousVariable("regionalPriceMomentum")\nbook_total = ContinuousVariable("book_total")\nbook_yearlyUser = ContinuousVariable("book_yearlyUser")\nbook_yearlyBook = ContinuousVariable("book_yearlyBook")\nemploymentRate = ContinuousVariable("employmentRate")\nenrollmentRate = ContinuousVariable("enrollmentRate")\nbabyOneMoreTime = ContinuousVariable("babyOneMoreTime")\n# 학생 sexRatio\nstudents_sexRatio = ContinuousVariable("students_sexRatio")\n# 전출·입 ratio\nstudents_moveOut_ratio = ContinuousVariable("students_moveOut_ratio")\nstudents_moveIn_ratio = ContinuousVariable("students_moveIn_ratio")\n# 교사 sexRatio\ngeneralTeacher_sexRatio = ContinuousVariable("generalTeacher_sexRatio")\n# 학생 교사 ratio\nstudents_generalTeacher_ratio = ContinuousVariable("students_generalTeacher_ratio")\n# 학생 남교사 ratio\nstudents_maleTeacher_ratio = ContinuousVariable("students_maleTeacher_ratio")\n# 학생 여교사 ratio\nstudents_femaleTeacher_ratio = ContinuousVariable("students_femaleTeacher_ratio")\n# 학생 특수교실 수 ratio\nstudents_specialClass_ratio = ContinuousVariable("students_specialClass_ratio")\n# 학생 학교 크기 ratio\nstudents_schoolSize_ratio = ContinuousVariable("students_schoolSize_ratio")\n# 학교 크기, 교실 수 ratio\nschoolSize_class_ratio = ContinuousVariable("schoolSize_class_ratio")\n\n\ndomain = Domain([index,\n                 schoolName_keyWord,\n                 students_number,\n                 students_female_number,\n                 students_moveOut_number,\n                 students_moveIn_number,\n                 generalTeacher_number,\n                 generalTeacher_female_number,\n                 positionTeacher_number,\n                 positionTeacher_female_number,\n                 schoolSize,\n                 numberOfDepartment,\n                 generalClassNumber, \n                 specialClassNumber, \n                 regionalAverageIncome,\n                 regionalPricePerPy,\n                 regionalPriceMomentum,\n                 book_total,\n                 book_yearlyUser,\n                 book_yearlyBook,\n                 employmentRate,\n                 enrollmentRate, \n                 babyOneMoreTime, \n                 students_sexRatio, \n                 students_moveOut_ratio, \n                 students_moveIn_ratio, \n                 generalTeacher_sexRatio, \n                 students_generalTeacher_ratio, \n                 students_maleTeacher_ratio, \n                 students_femaleTeacher_ratio, \n                 students_specialClass_ratio, \n                 students_schoolSize_ratio, \n                 schoolSize_class_ratio\n                 ])\n\n\n# Final data\nout_data = Table(domain, list_forLongLive) # Data seen at the output of the Python_Script widget.\nprint(out_data) # This line is only used for debugging, you can comment it.\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x02\xc1\x00\x00\x01\x10\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', '__version__': 2}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
